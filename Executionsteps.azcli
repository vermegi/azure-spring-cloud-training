
# Demo1

```bash
az login
az extension add -y --source https://azureclitemp.blob.core.windows.net/spring-cloud/spring_cloud-0.1.0-py2.py3-none-any.whl
```

## create azure spring cloud in the portal or through cli

```bash
az group create -n demo-azurespringcloud
az spring-cloud create -n demospringcloud -g demo-azurespringcloud -l westeurope

az configure --defaults group=demo-azurespringcloud
az configure --defaults spring-cloud=demospringcloud
```

# Demo2

download sample app

```bash
curl https://start.spring.io/starter.tgz -d dependencies=web -d baseDir=simple-microservice -d bootVersion=2.1.9.RELEASE | tar -xzvf -
```
add RestController and GetMapping
test it out locally:

```bash
./mvnw package
./mvnw spring-boot:run
```

test out the application through port mapping
apparently this is not working (error page shown)
however, if you kill the app and rerun through VSO debug, you will see breakpoint be hit in your get action

## Create and deploy on Azure Spring Cloud

```bash
az spring-cloud app create -n simple-microservice
```

Build and clean

```bash
./mvnw clean package
az spring-cloud app deploy -n simple-microservice --jar-path target/demo-0.0.1-SNAPSHOT.jar
```

## test out the app in the cloud

# Demo 3

## create log analytics workspace
az monitor log-analytics workspace create --workspace-name demospringcloudworkspace -l westeurope 

## connect workspace to spring cloud (in portal)
Since the above az statement already connects the workspace to our spring cloud (probably because of the default config for az statements we have???), you only need to select the monitor diagnostic setting in the portal and add additional monitoring settings.

# Demo 4

I configured my config repo in a private azure devops repo, created Git credentials for this repo in azure devops and linked that repo to spring cloud config server.


# Demo 5 

```bash
curl https://start.spring.io/starter.tgz -d dependencies=web,cloud-eureka,cloud-config-client -d baseDir=spring-cloud-microservice -d bootVersion=2.1.9.RELEASE | tar -xzvf -
```

```bash
az spring-cloud app create -n spring-cloud-microservice

./mvnw clean package -DskipTests -Pcloud

az spring-cloud app deploy -n spring-cloud-microservice --jar-path target/demo-0.0.1-SNAPSHOT.jar
```

# Demo 6

```bash
az cosmosdb create --name gitte-test-spring-cloud --locations regionName=westeurope
```

```bash
curl https://start.spring.io/starter.tgz -d dependencies=webflux,cloud-eureka,cloud-config-client -d baseDir=city-service -d bootVersion=2.1.9.RELEASE | tar -xzvf -
```

```bash
az spring-cloud app create -n city-service
```

Bind this app to our cosmos db in the portal

```bash
./mvnw clean package -DskipTests -Pcloud
az spring-cloud app deploy -n city-service --jar-path target/demo-0.0.1-SNAPSHOT.jar
```


# Demo 7

```bash
read -p "Password: " passw ; echo
az mysql server create --name gitte-azure-spring-cloud-training --sku-name B_Gen5_1 --admin-user givermei --admin-password $passw --location westeurope  --version 5.7

az mysql db create --name azurespringcloudtraining --server-name gitte-azure-spring-cloud-training
```

```bash
curl https://start.spring.io/starter.tgz -d dependencies=web,data-jpa,mysql,cloud-eureka,cloud-config-client -d baseDir=weather-service -d bootVersion=2.1.9.RELEASE | tar -xzvf -
```

```bash
az spring-cloud app create -n weather-service
```


```bash
./mvnw clean package -DskipTests -Pcloud
az spring-cloud app deploy -n weather-service --jar-path target/demo-0.0.1-SNAPSHOT.jar

```


# Demo 8

```bash
curl https://start.spring.io/starter.tgz -d dependencies=cloud-gateway,cloud-eureka,cloud-config-client -d baseDir=gateway -d bootVersion=2.1.9.RELEASE | tar -xzvf -
```

```bash
az spring-cloud app create -n gateway --is-public true

./mvnw clean package -DskipTests -Pcloud
az spring-cloud app deploy -n gateway --jar-path target/demo-0.0.1-SNAPSHOT.jar
```

# Demo 9 

https://demospringcloud-gateway.azuremicroservices.io/WEATHER-SERVICE/weather/city?name=Paris%2C%20France
https://demospringcloud-gateway.azuremicroservices.io/WEATHER-SERVICE/weather/city?name=Paris%2C%20France./


# Demo 10

```bash
./mvnw clean package -DskipTests -Pcloud
az spring-cloud app deployment create --name green --app weather-service --jar-path target/demo-0.0.1-SNAPSHOT.jar

az spring-cloud app set-deployment -n weather-service --deployment green

az spring-cloud app set-deployment -n weather-service --deployment default
```



